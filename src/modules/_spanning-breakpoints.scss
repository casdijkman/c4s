/*
 * SPDX-FileCopyrightText: 2021 Cas Dijkman
 *
 * SPDX-License-Identifier: GPL-3.0-only
 */

@use '../variables';
@use '../functions';
@use '../mixins';
@use 'sass:map';
@use 'sass:list';
@use 'sass:math';

@mixin spanning-breakpoints($media: null) {
  @if $media != null {
    @error 'Spanning-breakpoints module is not compatible with media suffix';
  }

  $global-prefix: variables.$global-prefix;

  #{functions.construct-class-name($global-prefix, container)} {
    width: 100%;
  }

  @each $breakpoint, $map in variables.$breakpoints {
    #{functions.construct-class-name($global-prefix, container, $breakpoint)} {
      width: 100%;
    }
  }

  @each $breakpoint, $map in variables.$breakpoints {
    $breakpoint-value: map.get($map, 'breakpoint');
    $container-offset: 2em;
    $compatible: functions.compatible-hardened($breakpoint-value, $container-offset);

    @if $compatible {
      $index: list.index(map.keys(variables.$breakpoints), $breakpoint);
      $max-width-value: functions.em-to-rem($breakpoint-value - $container-offset);

      @each $breakpoint2, $map2 in variables.$breakpoints {
        $index2: list.index(map.keys(variables.$breakpoints), $breakpoint2);
        $breakpoint-value2: map.get($map2, 'breakpoint');
        $compatible: functions.compatible-hardened($breakpoint-value, $breakpoint-value2);

        @if $index2 <= $index and $compatible {
          @include mixins.media-breakpoint-up($breakpoint) {
            #{functions.construct-class-name($global-prefix, container)} {
              max-width: $max-width-value;
            }

            #{functions.construct-class-name($global-prefix, container, $breakpoint2)} {
              max-width: $max-width-value;
            }
          }
        }
      }
    }
  }

  #{functions.construct-class-name($global-prefix, show-breakpoints)}::before {
    content: '[breakpoint: base] ';

    @each $breakpoint, $map in variables.$breakpoints {
      @include mixins.media-breakpoint-up($breakpoint) {
        content: '[breakpoint: #{$breakpoint}] ';
      }
    }
  }
}
