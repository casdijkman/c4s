/*
 * SPDX-FileCopyrightText: 2021 Cas Dijkman
 *
 * SPDX-License-Identifier: GPL-3.0-only
 */

@use '../variables';
@use 'sass:map';
@use 'sass:string';

@mixin reset($media: null) {
  @if $media != null {
    @error 'Reset module is not compatible with responsiveness';
  }

  html {
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;
  }

  body {
    margin: 0;
    box-sizing: border-box;
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  button {
    font-size: inherit;
    font-family: inherit;
  }

  img {
    display: block;
    max-width: 100%;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 2.75rem;
    margin-bottom: 1rem;

    @if map.get(variables.$line-height-levels, 'header') != null {
      line-height: map.get(variables.$line-height-levels, 'header');
    }
  }

  @if map.get(variables.$font-sizes, 'f1') != null {
    h1 {
      font-size: map.get(variables.$font-sizes, 'f1');
    }
  }

  @if map.get(variables.$font-sizes, 'f2') != null {
    h2 {
      font-size: map.get(variables.$font-sizes, 'f2');
    }
  }

  @if map.get(variables.$font-sizes, 'f3') != null {
    h3 {
      font-size: map.get(variables.$font-sizes, 'f3');
    }
  }

  @if map.get(variables.$font-sizes, 'f4') != null {
    h4 {
      font-size: map.get(variables.$font-sizes, 'f4');
    }
  }

  @if map.get(variables.$font-sizes, 'f5') != null {
    h5 {
      font-size: map.get(variables.$font-sizes, 'f5');
    }
  }

  @if map.get(variables.$font-sizes, 'f6') != null {
    h6 {
      font-size: map.get(variables.$font-sizes, 'f6');
    }
  }

  @if map.get(variables.$font-sizes, 'small') != null {
    small {
      font-size: map.get(variables.$font-sizes, 'small');
    }
  }

  @if map.get(variables.$line-height-levels, 'text') != null {
    p {
      line-height: map.get(variables.$line-height-levels, 'text');
    }
  }

  @if map.get(variables.$font-families, 'code') != null {
    code {
      font-family: string.unquote(map.get(variables.$font-families, 'code'));
    }
  }
}
