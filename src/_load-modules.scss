@use 'sass:map';
@use 'variables';
@use 'modules/background-color';
@use 'modules/border-color';
@use 'modules/border';
@use 'modules/border-style';
@use 'modules/border-width';
@use 'modules/box-sizing';
@use 'modules/color';
@use 'modules/complex';
@use 'modules/cursor';
@use 'modules/debug';
@use 'modules/font-family';
@use 'modules/font-style';
@use 'modules/hover-background-color';
@use 'modules/hover-color';
@use 'modules/miscellaneous';
@use 'modules/opacity';
@use 'modules/reset';
@use 'modules/text-align';
@use 'modules/text-decoration';
@use 'modules/text-shadow';
@use 'modules/text-transform';
@use 'modules/transform';
@use 'modules/transition';
@use 'modules/visibility';
@use 'modules/border-radius';
@use 'modules/coordinates';
@use 'modules/display';
@use 'modules/flex-direction';
@use 'modules/flex';
@use 'modules/float';
@use 'modules/font-size';
@use 'modules/font-weight';
@use 'modules/height';
@use 'modules/line-height';
@use 'modules/margin';
@use 'modules/measure';
@use 'modules/padding';
@use 'modules/position';
@use 'modules/tracking';
@use 'modules/vertical-align';
@use 'modules/white-space';
@use 'modules/width';

@mixin load-modules($modules: null, $breakpoints: null) {
  @if $modules == null {
    $modules: variables.$modules;
  }

  @if $breakpoints == null {
    $breakpoints: variables.$breakpoints;
  }

  @each $module, $responsive in $modules {
    @if $module == background-color {
      @include background-color.background-color();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include background-color.background-color($breakpoint);
        }
      }
    }

    @if $module == border-color {
      @include border-color.border-color();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include border-color.border-color($breakpoint);
        }
      }
    }

    @if $module == border {
      @include border.border();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include border.border($breakpoint);
        }
      }
    }

    @if $module == border-style {
      @include border-style.border-style();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include border-style.border-style($breakpoint);
        }
      }
    }

    @if $module == border-width {
      @include border-width.border-width();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include border-width.border-width($breakpoint);
        }
      }
    }

    @if $module == box-sizing {
      @include box-sizing.box-sizing();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include box-sizing.box-sizing($breakpoint);
        }
      }
    }

    @if $module == color {
      @include color.color();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include color.color($breakpoint);
        }
      }
    }

    @if $module == complex {
      @include complex.complex();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include complex.complex($breakpoint);
        }
      }
    }

    @if $module == cursor {
      @include cursor.cursor();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include cursor.cursor($breakpoint);
        }
      }
    }

    @if $module == debug {
      @include debug.debug();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include debug.debug($breakpoint);
        }
      }
    }

    @if $module == font-family {
      @include font-family.font-family();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include font-family.font-family($breakpoint);
        }
      }
    }

    @if $module == font-style {
      @include font-style.font-style();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include font-style.font-style($breakpoint);
        }
      }
    }

    @if $module == hover-background-color {
      @include hover-background-color.hover-background-color();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include hover-background-color.hover-background-color($breakpoint);
        }
      }
    }

    @if $module == hover-color {
      @include hover-color.hover-color();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include hover-color.hover-color($breakpoint);
        }
      }
    }

    @if $module == miscellaneous {
      @include miscellaneous.miscellaneous();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include miscellaneous.miscellaneous($breakpoint);
        }
      }
    }

    @if $module == opacity {
      @include opacity.opacity();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include opacity.opacity($breakpoint);
        }
      }
    }

    @if $module == reset {
      @include reset.reset();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include reset.reset($breakpoint);
        }
      }
    }

    @if $module == text-align {
      @include text-align.text-align();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include text-align.text-align($breakpoint);
        }
      }
    }

    @if $module == text-decoration {
      @include text-decoration.text-decoration();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include text-decoration.text-decoration($breakpoint);
        }
      }
    }

    @if $module == text-shadow {
      @include text-shadow.text-shadow();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include text-shadow.text-shadow($breakpoint);
        }
      }
    }

    @if $module == text-transform {
      @include text-transform.text-transform();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include text-transform.text-transform($breakpoint);
        }
      }
    }

    @if $module == transform {
      @include transform.transform();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include transform.transform($breakpoint);
        }
      }
    }

    @if $module == transition {
      @include transition.transition();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include transition.transition($breakpoint);
        }
      }
    }

    @if $module == visibility {
      @include visibility.visibility();

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include visibility.visibility($breakpoint);
        }
      }
    }

    @if $module == border-radius {
      @include border-radius.border-radius('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include border-radius.border-radius($breakpoint);
        }
      }
    }

    @if $module == coordinates {
      @include coordinates.coordinates('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include coordinates.coordinates($breakpoint);
        }
      }
    }

    @if $module == display {
      @include display.display('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include display.display($breakpoint);
        }
      }
    }

    @if $module == flex-direction {
      @include flex-direction.flex-direction('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include flex-direction.flex-direction($breakpoint);
        }
      }
    }

    @if $module == flex {
      @include flex.flex('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include flex.flex($breakpoint);
        }
      }
    }

    @if $module == float {
      @include float.float('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include float.float($breakpoint);
        }
      }
    }

    @if $module == font-size {
      @include font-size.font-size('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include font-size.font-size($breakpoint);
        }
      }
    }

    @if $module == font-weight {
      @include font-weight.font-weight('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include font-weight.font-weight($breakpoint);
        }
      }
    }

    @if $module == height {
      @include height.height('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include height.height($breakpoint);
        }
      }
    }

    @if $module == line-height {
      @include line-height.line-height('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include line-height.line-height($breakpoint);
        }
      }
    }

    @if $module == margin {
      @include margin.margin('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include margin.margin($breakpoint);
        }
      }
    }

    @if $module == measure {
      @include measure.measure('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include measure.measure($breakpoint);
        }
      }
    }

    @if $module == padding {
      @include padding.padding('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include padding.padding($breakpoint);
        }
      }
    }

    @if $module == position {
      @include position.position('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include position.position($breakpoint);
        }
      }
    }

    @if $module == tracking {
      @include tracking.tracking('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include tracking.tracking($breakpoint);
        }
      }
    }

    @if $module == vertical-align {
      @include vertical-align.vertical-align('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include vertical-align.vertical-align($breakpoint);
        }
      }
    }

    @if $module == white-space {
      @include white-space.white-space('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include white-space.white-space($breakpoint);
        }
      }
    }

    @if $module == width {
      @include width.width('');

      @if $responsive {
        @each $breakpoint, $map in $breakpoints {
          @include width.width($breakpoint);
        }
      }
    }

  }
}
