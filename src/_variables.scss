@use './functions';
@use 'sass:color';
@use 'sass:math';
@use 'sass:map';

/**********
 * GLOBAL *
 **********/

$global-prefix: '';

$breakpoints: (
  s: (
    breakpoint: 20em
  ),
  m: (
    breakpoint: 30em
  ),
  l: (
    breakpoint: 60em
  ),
  h: (
    breakpoint: 90em,
  ),
  p: (
    media: print
  )
);

/*
   SPACERS

   There are eight levels of spacers, including $spacer-0, which is level 0
   $spacer-0 is 0. After $spacer-1, every next spacer is twice the size of the last
   Levels  1 through 7 therefore represent the product of $spacer-base with powers of two
   $spacer-4 and is considered 'medium' size and is the product of $spacer-base and 2^0
 */

$spacer-base: 2rem;

$spacer-levels: (
  '0': 0,
  '1': $spacer-base * functions.nth-power-of-two(-3),
  '2': $spacer-base * functions.nth-power-of-two(-2),
  '3': $spacer-base * functions.nth-power-of-two(-1),
  '4': $spacer-base,
  '5': $spacer-base * functions.nth-power-of-two(1),
  '6': $spacer-base * functions.nth-power-of-two(2),
  '7': $spacer-base * functions.nth-power-of-two(3)
);

// Add auto as a level for margins with -auto suffix
$margin-spacer-levels: map.merge($spacer-levels, ('-auto': auto));

/*
   COORDINATE SPACERS

   These spacers are used for top, right, bottom and left positioning.
 */

$coordinate-spacer-levels: (
  '0':   0,
  '1':   1rem,
  '2':   2rem,
  '50':  50%,
  '100': 100%
);

/*
   SIZERS

   There are six levels of sizers, including $sizer-0, which is level 0
   $sizer-0 is 0. After $sizer-1, every next sizer is twice the size of the last
   Levels  1 through 5 therefore represent the product of $sizer-base with powers of two
 */

$sizer-base: 1rem;

$sizer-levels: (
  '0':           0,
  '1':           $sizer-base,
  '2':           $sizer-base * functions.nth-power-of-two(1),
  '3':           $sizer-base * functions.nth-power-of-two(2),
  '4':           $sizer-base * functions.nth-power-of-two(3),
  '5':           $sizer-base * functions.nth-power-of-two(4),
  '6':           $sizer-base * functions.nth-power-of-two(5),
  '-10':         10%,
  '-20':         20%,
  '-30':         30%,
  '-third':      math.div(100%, 3),
  '-40':         40%,
  '-50':         50%,
  '-60':         60%,
  '-two-thirds': 100% * math.div(2, 3),
  '-70':         70%,
  '-80':         80%,
  '-90':         90%,
  '-100':        100%
);

/*
   TRANSLATE
 */

$translate-levels: (
  '0':    0,
  '100':  100%,
  'n100': -100%,
  '50':   50%,
  'n50':  -50%
);

/*
   TRANSITION SPEED
 */

$transition-speeds: (
  'slow':   .5s,
  'medium': .25s,
  'fast':   .15s
);

/*
   COLORS
 */

$black: #000;
$white: #fff;

$colors: (
  /*
     Black/gray/white
   */
  'black':         $black,
  'near-black':    #111,
  'dark-gray':     #333,
  'mid-gray':      #555,
  'gray':          #777,
  'silver':        #999,
  'light-silver':  #aaa,
  'moon-gray':     #ccc,
  'light-gray':    #eee,
  'near-white':    #f4f4f4,
  'white':         $white,
  /*
     Red
   */
  'dark-red':      #e7040f,
  'red':           #ff4136,
  'light-red':     #ff725c,
  'washed-red':    #ffdfdf,
  /*
     Orange/yellow
   */
  'orange':        #ff6300,
  'gold':          #ffb700,
  'yellow':        #ffd700,
  'light-yellow':  #fbf1a9,
  'washed-yellow': #fffceb,
  /*
     Purple/pink
   */
  'purple':        #5e2ca5,
  'light-purple':  #a463f2,
  'dark-pink':     #d5008f,
  'hot-pink':      #ff41b4,
  'pink':          #ff80cc,
  'light-pink':    #ffa3d7,
  /*
     Green
   */
  'dark-green':    #137752,
  'green':         #19a974,
  'light-green':   #9eebcf,
  'washed-green':  #e8fdf5,
  /*
     Blue
   */
  'navy':          #001b44,
  'dark-blue':     #00449e,
  'blue':          #357edd,
  'light-blue':    #96ccff,
  'lightest-blue': #cdecff,
  'washed-blue':   #f6fffe,
  /*
     Black opacity variations
   */
  'black-90':      color.scale($black, $alpha: -10%),
  'black-80':      color.scale($black, $alpha: -20%),
  'black-70':      color.scale($black, $alpha: -30%),
  'black-60':      color.scale($black, $alpha: -40%),
  'black-50':      color.scale($black, $alpha: -50%),
  'black-40':      color.scale($black, $alpha: -60%),
  'black-30':      color.scale($black, $alpha: -70%),
  'black-20':      color.scale($black, $alpha: -80%),
  'black-10':      color.scale($black, $alpha: -90%),
  'black-05':      color.scale($black, $alpha: -95%),
  'black-025':     color.scale($black, $alpha: -97.5%),
  'black-0125':    color.scale($black, $alpha: -98.75%),
  /*
     White opacity variations
   */
  'white-90':      color.scale($white, $alpha: -10%),
  'white-80':      color.scale($white, $alpha: -20%),
  'white-70':      color.scale($white, $alpha: -30%),
  'white-60':      color.scale($white, $alpha: -40%),
  'white-50':      color.scale($white, $alpha: -50%),
  'white-40':      color.scale($white, $alpha: -60%),
  'white-30':      color.scale($white, $alpha: -70%),
  'white-20':      color.scale($white, $alpha: -80%),
  'white-10':      color.scale($white, $alpha: -90%),
  'white-05':      color.scale($white, $alpha: -95%),
  'white-025':     color.scale($white, $alpha: -97.5%),
  'white-0125':    color.scale($white, $alpha: -98.75%),
  /*
     Transparent
   */
  'transparent': transparent
);

/*
   BORDER-RADIUS SIZES
 */

$border-radius-base: 1rem;

$border-radius-levels: (
  '0':     0,
  '1':     $border-radius-base * functions.nth-power-of-two(-3),
  '2':     $border-radius-base * functions.nth-power-of-two(-2),
  '3':     $border-radius-base * functions.nth-power-of-two(-1),
  '4':     $border-radius-base,
  '-100':  100%,
  '-pill': 9999px
);

/*
   FONT SIZES

   `h1` trough `h6` and `small` font sizes are set along with
   corresponding classes `.h1` through `.h6` and `.small`
 */

$font-size-base: 1em;
$font-scaling-factor: 1.25;

$font-sizes: (
  f-headline:    6rem,
  f-subheadline: 5rem,
  f1:            $font-size-base * functions.power($font-scaling-factor, 5),
  f2:            $font-size-base * functions.power($font-scaling-factor, 4),
  f3:            $font-size-base * functions.power($font-scaling-factor, 3),
  f4:            $font-size-base * functions.power($font-scaling-factor, 2),
  f5:            $font-size-base * functions.power($font-scaling-factor, 1),
  f6:            $font-size-base,
  small:         $font-size-base * functions.power($font-scaling-factor, -1)
);

/*
   LINE HEIGHTS
 */

$line-height-levels: (
  'solid':  1,
  'header': 1.15,
  'text':   1.5,
  'extra':  2
);

/*
   FONT WEIGHTS
 */

$font-weight-levels: (
  'fw-100':     100,
  'fw-200':     200,
  'fw-300':     300,
  'fw-normal':  400, // font-weight 400 is normal
  'fw-500':     500,
  'fw-600':     600,
  'fw-bold':    700, // font-weight 700 is bold
  'b':          700, // Add extra class for font-weight bold for brevity
  'fw-800':     800,
  'fw-900':     900,
  'fw-lighter': lighter,
  'fw-bolder':  bolder
);

/*
   OPACITY LEVELS
 */

$opacity-name: o;

$opacity-levels: (
  '100': 1,
  '90':  .9,
  '80':  .8,
  '70':  .7,
  '60':  .6,
  '50':  .5,
  '40':  .4,
  '30':  .3,
  '20':  .2,
  '10':  .1,
  '05':  .05,
  '025': .025,
  '0':   0
);

/*
   BORDER STYLES
 */

$border-styles: [ solid, dotted, dashed, double, groove, ridge, inset, outset ];

/*
   BORDER WIDTHS
 */

$border-width-base: 1rem;

$border-widths: (
  '1': $border-width-base * functions.nth-power-of-two(-3),
  '2': $border-width-base * functions.nth-power-of-two(-2),
  '3': $border-width-base * functions.nth-power-of-two(-1),
  '4': $border-width-base,
  '5': $border-width-base * functions.nth-power-of-two(1)
);

/*
   CURSORS
 */

$cursors: pointer, text, none, not-allowed, progress, wait;

/*
   FONT FAMILIES
 */

$font-family-code: consolas, monaco, monospace;

/*
   FONT STYLES
 */

$font-styles: (
  fs-normal: normal,
  fs-italic: italic,
  i: italic
);

/*
   TEXT ALIGNS
 */

$text-aligns: (
  l: left,
  r: right,
  c: center,
  j: justify
);

/*
   TEXT DECORATIONS
 */

$text-decorations: (
  underline: underline,
  line-through: line-through,
  strike: line-through
);

/*
   VISIBILITIES
 */

$visibilities: (
  visible: visible,
  hidden: hidden,
  invisible: hidden,
  // collapse: collapse
);

/*
   CONFIGURATION
 */

@mixin configure(
  $global-prefix: null,
  $breakpoints: null,
  $spacer-base: null,
  $spacer-levels: null,
  $margin-spacer-levels: null,
  $coordinate-spacer-levels: null,
  $sizer-base: null,
  $sizer-levels: null,
  $translate-levels: null,
  $transition-speeds: null,
  $black: null,
  $white: null,
  $colors: null,
  $border-radius-base: null,
  $border-radius-levels: null,
  $font-size-base: null,
  $font-scaling-factor: null,
  $font-sizes: null,
  $line-height-levels: null,
  $font-weight-levels: null,
  $opacity-name: null,
  $opacity-levels: null,
  $border-styles: null,
  $border-width-base: null,
  $border-widths: null,
  $cursors: null,
  $font-family-code: null,
  $font-styles: null,
  $text-aligns: null,
  $text-decorations: null,
  $visibilities: null
) {
  @if $global-prefix != null {
    $global-prefix: $global-prefix !global;
  }

  @if $breakpoints != null {
    $breakpoints: $breakpoints !global;
  }

  @if $spacer-base != null {
    $spacer-base: $spacer-base !global;
  }

  @if $spacer-levels != null {
    $spacer-levels: $spacer-levels !global;
  }

  @if $margin-spacer-levels != null {
    $margin-spacer-levels: $margin-spacer-levels !global;
  }

  @if $coordinate-spacer-levels != null {
    $coordinate-spacer-levels: $coordinate-spacer-levels !global;
  }

  @if $sizer-base != null {
    $sizer-base: $sizer-base !global;
  }

  @if $sizer-levels != null {
    $sizer-levels: $sizer-levels !global;
  }

  @if $translate-levels != null {
    $translate-levels: $translate-levels !global;
  }

  @if $transition-speeds != null {
    $transition-speeds: $transition-speeds !global;
  }

  @if $black != null {
    $black: $black !global;
  }

  @if $white != null {
    $white: $white !global;
  }

  @if $colors != null {
    $colors: $colors !global;
  }

  @if $border-radius-base != null {
    $border-radius-base: $border-radius-base !global;
  }

  @if $border-radius-levels != null {
    $border-radius-levels: $border-radius-levels !global;
  }

  @if $font-size-base != null {
    $font-size-base: $font-size-base !global;
  }

  @if $font-scaling-factor != null {
    $font-scaling-factor: $font-scaling-factor !global;
  }

  @if $font-sizes != null {
    $font-sizes: $font-sizes !global;
  }

  @if $line-height-levels != null {
    $line-height-levels: $line-height-levels !global;
  }

  @if $font-weight-levels != null {
    $font-weight-levels: $font-weight-levels !global;
  }

  @if $opacity-name != null {
    $opacity-name: $opacity-name !global;
  }

  @if $opacity-levels != null {
    $opacity-levels: $opacity-levels !global;
  }

  @if $border-styles != null {
    $border-styles: $border-styles !global;
  }

  @if $border-width-base != null {
    $border-width-base: $border-width-base !global;
  }

  @if $border-widths != null {
    $border-widths: $border-widths !global;
  }

  @if $cursors != null {
    $cursors: $cursors !global;
  }

  @if $font-family-code != null {
    $font-family-code: $font-family-code !global;
  }

  @if $font-styles != null {
    $font-styles: $font-styles !global;
  }

  @if $text-aligns != null {
    $text-aligns: $text-aligns !global;
  }

  @if $text-decorations != null {
    $text-decorations: $text-decorations !global;
  }

  @if $visibilities != null {
    $visibilities: $visibilities !global;
  }
}
