{% macro exampleBox(firstClass, caption) %}
    <div class="debug-striped-light p3">
	{{ caller(firstClass, caption) }}
    </div>
{% endmacro %}

{% macro example(type, selectors, declarations) %}
    {% set firstSelector %}{{ selectors | first }}{% endset %}
    {% set firstClass %}{{ firstSelector | getClassFromSelector }}{% endset %}
    {% set readableClasses %}{{ selectors | getClassesFromSelectors | join(" or ") }}{% endset %}
    {% set caption = "Element with class " + readableClasses %}

    {% if type === "complex" %}
	{% if firstClass === "bt-between" %}
	    <div class="dib ba p3">
		<div class="dif flex-column">
		    {% for i in [1, 2, 3] %}
			<div class="bg-black-10 p1 {{ firstClass }}">
			    {{ caption }}
			</div>
		    {% endfor %}
		</div>
	    </div>
	{% elif firstClass === "bl-between" %}
	    <div class="dib ba p3">
		<div class="df">
		    {% for i in [1, 2, 3] %}
			<div class="dib bg-black-10 p1 {{ firstClass }}">
			    {{ caption }}
			</div>
		    {% endfor %}
		</div>
	    </div>
	{% endif %}
    {% elif type === "reset" %}
	{#

	These rules should speak for themselves, they overrides some 'harmful' defaults
	and set defaults for header font sizes, line heights etc.

	#}
    {% elif type === "color" %}
	<div class="dib ba p3">
	    <div class="dib p1 {{ firstClass }}">
		{{ caption }}
	    </div>
	    <br>
	    <div class="dib bg-black p1 {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "hover-color" %}
	<div class="dib p3 ba">
	    <div class="dib {{ firstClass }}">
		{{ caption }}
	    </div>
	    <br>
	    <div class="dib bg-black white {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "background-color" %}
	{% call exampleBox(firstClass, caption) %}
	    <div class="dib {{ firstClass }}">
		{{ caption }}
	    </div>
	    <br>
	    <div class="dib white {{ firstClass }}">
		{{ caption }}
	    </div>
	{% endcall %}
    {% elif type === "hover-background-color" %}
	<div class="dib p3 ba">
	    <div class="dib {{ firstClass }}">
		{{ caption }}
	    </div>
	    <br>
	    <div class="dib white {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "border" %}
	<div class="dib bg-black-10 p1 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "border-width" %}
	<div class="dib p1 ba {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "border-color" %}
	<div class="dib p2">
	    <div class="dib ba p1 {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
	<br>
	<div class="dib bg-black white p2">
	    <div class="ba p1 {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "border-style" %}
	<div class="dib ba bw2 p1 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "font-family" %}
	<div class="{{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "font-style" %}
	<div class="dib p3 ba">
	    <div class="{{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "text-decoration" %}
	<div class="dib p3 ba {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "text-transform" %}
	<div class="dib p3 ba {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "text-align" %}
	<div class="p3 ba {{ firstClass }}">
	    {{ caption }}
	    {% if firstClass == "tj" %}
		&mdash;	Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
		tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
		veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
		commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
		velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
		cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
		est laborum.
	    {% endif %}
	</div>
    {% elif type === "opacity" %}
	<div class="dib bg-black white p3 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "transform" %}
	{% macro transformBox(firstClass, caption, containerClass, boxClass, textClass) %}
	    <div class="top-0 left-50 translateX-n50 w-third {{ containerClass }}">
		<div class="p2 ba {{ firstClass }} {{ boxClass }}">
		    <span class="{{ textClass }}">
			{{ caption }}
		    </span>
		</div>
	    </div>
	{% endmacro %}

	{% set paddingClass %}
	{% if r/Y-100$/.test(firstClass) %}
	    pb6 pb5-m pt3 pt4-s
	{% elif r/Y-n100$/.test(firstClass) %}
	    pt6 pt5-m pb3 pb4-s
	{% elif r/Y-50$/.test(firstClass) %}
	    pb5 pb4-m pt3 pt4-s
	{% elif r/Y-n50$/.test(firstClass) %}
	    pt5 pt4-m pb3 pb4-s
	{% else %}
	    pv3
	{% endif %}
	{% endset %}

	<div class="{{ paddingClass }}">
	    <div class="relative">
		{# Placeholder #}
		{{ transformBox(firstClass, caption, "hidden") }}

		{# Ghost #}
		{{ transformBox("", caption, "absolute o-40", "debug-striped b--dashed", "hidden") }}

		{# Visible element #}
		{{ transformBox(firstClass, caption, "absolute") }}
	    </div>
	</div>
    {% elif type === "transition" %}
	TODO
    {% elif type === "visibility" %}
	<div class="dib bg-black white p1 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "box-sizing" %}
	{% set width = "256px" %}
	<div class="bt bb br bw5 {{ firstClass }}" style="width: {{ width }};">
	    {{ caption }} and width {{ width }}
	</div>
    {% elif type === "cursor" %}
	<div class="dib ba p3 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "miscellaneous" %}
	{% if firstClass === "list-reset" %}
	    <ul class="dib ba p3 {{ firstClass }}">
		{% for i in [1, 2, 3] %}
		    <li>List item in <code>ul</code> with class {{ firstClass }}</li>
		{% endfor %}
	    </ul>
	{% elif firstClass === "stretch" or firstClass === "stretch-pseudo" %}
	    <div class="w6 h4 ba relative">
		<a class="dib p3 debug-striped {{ firstClass }}" href="javascript:;">
		    {{ caption }}
		</a>
	    </div>
	{% elif firstClass === "link" %}
	    <div class="dib p3 ba">
		<a class="{{ firstClass }}" href="javascript:;">
		    {{ caption }}
		</a>
	    </div>
	{% endif %}
    {% elif type === "debug" %}
	<div class="p4 {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "padding" %}
	<div class="dib white bg-black {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "margin" %}
	{% set autoRegex = r/[rlh]-auto$/ %}

	{% if autoRegex.test(firstClass) %}
	    <div class="ba">
		<div class="w4 white bg-black {{ firstClass }}">
		    {{ caption }}
		</div>
	    </div>
	{% else %}
	    <div class="dib ba">
		<div class="dib white bg-black {{ firstClass }}">
		    {{ caption }}
		</div>
            </div>
	{% endif %}
    {% elif type === "width" %}
	<div class="ba">
	    <div class="dib white bg-black {{ firstClass }}">
		{{ caption }}
            </div>
	</div>
    {% elif type === "height" %}
	<div class="dib white bg-black {{ firstClass }}">
	    {{ caption }}
        </div>
    {% elif type === "position" %}
	{#
	<div class="relative ba w5 h5">
	<div class="dib white bg-black top-1 {{ firstClass }}">
	{{ caption }}
	</div>
	</div>
	#}
    {% elif type === "coordinates" %}
	<div class="relative ba w-50 h4">
	    <div class="dib white bg-black absolute {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "display" %}
	{#
	<div class="bg-black white {{ firstClass }}">
	{{ caption }}
	</div>
	#}
    {% elif type === "flex" %}
	{#
	TODO: implement
	#}
    {% elif type === "flex-direction" %}
	<div class="dif {{ firstClass }}">
	    {% for i in [1, 2, 3] %}
		<div class="p2">
		    <div class="bg-black white">
			Child {{ i }}
		    </div>
		</div>
	    {% endfor %}
	</div>
    {% elif type === "float" %}
	<div class="ba w5 h4">
	    <div class="dib white bg-black {{ firstClass }}">
		{{ caption }}
	    </div>
	</div>
    {% elif type === "border-radius" %}
	<div class="dib p3 ba {{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "font-size" %}
	<span class="{{ firstClass }}">
	    {{ caption }}
	</span>
    {% elif type === "line-height" %}
	<div class="dib bg-black white">
	    <span class="{{ firstClass }}">
		{{ caption }}
	    </span>
	</div>
    {% elif type === "font-weight" %}
	<div class="{{ firstClass }}">
	    {{ caption }}
	</div>
    {% elif type === "white-space" %}
	<div class="w5 bg-black-10 {{ firstClass }}">
	    {{ caption }}
	    {{ caption | replace(" ", "   ") }}
	</div>
    {% elif type === "vertical-align" %}
	<div class="dib bg-black white lh-extra ph2">
	    <div class="dib bg-red {{ firstClass }}" style="height: .4em; width: .4em;"></div>
	    {{ caption }}
	</div>
    {% elif type === "tracking" %}
	<span class="{{ firstClass }}">
	    {{ caption }}
	</span>
    {% elif type === "measure" %}
	<div class="bg-black white {{ firstClass }}">
	    {{ caption }}
	</div>
    {% else %}
	<div class="">
	    No example found
	</div>
    {% endif %}
{% endmacro %}

<html>
    <head>
	<meta charset="utf-8">
	<title>My CSS library demo</title>
	<meta name="description" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link href="/dist/c4s-all.css" rel="stylesheet">
    </head>
    <body class="p3">
	<h1 class="mt0">
	    C4S documentation
	</h1>

	{% for file in files %}
	    <h2 class="dib">
		{{ file.name | replace("-", " ") | title }}
	    </h2>
	    <code class="pl3 nowrap">
		{{ file.file }}
	    </code>

	    {% for rule in file.css.stylesheet.rules -%}
		{% if rule.type === "rule" -%}
		    <dl>
			<dt>
			    {{ rule.selectors | join(", ") }}
			</dt>
			<dd>
			    {% for declaration in rule.declarations -%}
				<div>
				    {{ declaration.property }}: {{ declaration.value }}
				</div>
			    {%- endfor %}
			</dd>
		    </dl>

		    <div>
			{{ example(file.name, rule.selectors, rule.declarations) }}
		    </div>
		{%- endif %}
	    {%- endfor %}
	{%- endfor %}
    </body>
</html>


